---
import BaseLayout from "@layouts/BaseLayout.astro";
import HorizontalCard from "@components/HorizontalCard.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths({ paginate }) {
  const all_posts = await getCollection("blog");
  all_posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
  return paginate(all_posts, { pageSize: 10 });
}
interface Page<T = any> {
  /** resultado */
  data: T[];
  /** metadatos */
  /** el recuento del primer elemento de la página, a partir de 0 */
  start: number;
  /** el recuento del último elemento de la página, a partir de 0 */
  end: number;
  /** el número total de resultados */
  total: number;
  /** el número de la página actual, a partir de 1 */
  currentPage: number;
  /** el número de elementos por página (predeterminado: 25) */
  size: number;
  /** el número de la última página */
  lastPage: number;
  url: {
    /** la url de la página actual */
    current: string;
    /** la url de la página anterior (si hay alguna) */
    prev: string | undefined;
    /** la url de la página siguiente (si hay alguna) */
    next: string | undefined;
  };
}
const { page } = Astro.props as { page: Page };
---


<BaseLayout title="Blog" sideBarActiveItemID="blog">
  <div class="mb-5">
    <div class="text-3xl w-full font-bold">Blog</div>
    <div>Pág(s). {page.currentPage} de {page.lastPage}</div>
  </div>
  {
    page.data.length === 0 ? (
      <div class="bg-base-200 border-l-4 border-secondary w-full p-4 min-w-full">
        <p class="font-bold">Lo siento!</p>
        <p>No hay posts publicados en este momento.</p>
      </div>
    ) : (
      <ul>
        {page.data.map((post) => (
          <>
            <HorizontalCard
              title={post.data.title}
              img={post.data.heroImage}
              desc={post.data.description}
              badge={post.data.badge}
              tags={post.data.tags}
              url={"/blog/" +  post.slug} // crea el link basado en el nombre del fichero md
              target="_self"
            />
            <div class="divider my-0" />
          </>
        ))}
      </ul>
    )
  }
  <div class="flex justify-between">
    {
      page.url.prev ? (
        <a href={page.url.prev} class="btn btn-ghost my-10 mx-5">
          {" "}
          <svg
            class="h-6 w-6 fill-current md:h-8 md:w-8"
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
          >
            <path d="M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z" />
          </svg>{" "}
          all_posts más recientes
        </a>
      ) : (
        <div />
      )
    }
    {
      page.url.next ? (
        <a href={page.url.next} class="btn btn-ghost my-10 mx-5">
          all_posts más antiguos{" "}
          <svg
            class="h-6 w-6 fill-current md:h-8 md:w-8"
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
          >
            {" "}
            <path d="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z" />
          </svg>
        </a>
      ) : (
        <div />
      )
    }
  </div>
</BaseLayout>
